{"version":3,"sources":["global.js","db.js","carrito.js","app.js","navScroll.js","init.js"],"names":["mostrarNotificacion","mensaje","tipo","notificacion","document","querySelector","createElement","className","body","appendChild","textContent","style","display","opacity","setTimeout","normalizarTexto","texto","toLowerCase","normalize","replace","verificarImagen","url","img","Image","src","complete","width","window","carrito","JSON","parse","localStorage","getItem","idProductoActual","aromasSeleccionados","scrollPosition","module","exports","productos","catalogo","Satya","precio","aromas","nombre","stock","Series","Aromanza","Natural","Cannabis","Yagra","Patagonia","Sagrado","Ritual","Cosmos","marca","lineas","Object","entries","linea","datos","imagen","push","id","console","log","carritoIcono","carritoDesplegable","carritoItems","carritoContador","carritoTotal","botonComprar","botonVaciar","cerrarCarritoBtn","carritoOverlay","toggleCarrito","classList","contains","cerrarCarrito","add","overflow","documentElement","overflowY","remove","actualizarCarrito","innerHTML","total","forEach","item","index","producto","find","p","subtotal","parseInt","cantidad","carritoItem","aroma","reduce","sum","setItem","stringify","botonSiguiente","disabled","length","querySelectorAll","btn","addEventListener","e","target","getAttribute","splice","agregarAlCarrito","itemExistenteIndex","findIndex","precioNumerico","async","comprar","botonPagar","getElementById","value","trim","email","telefono","test","itemsMP","map","Error","Math","random","toString","substr","title","substring","unit_price","quantity","Number","currency_id","description","payerMP","name","phone","area_code","number","address","street_name","street_number","zip_code","items","payer","response","fetch","method","headers","ok","errorData","json","error","responseData","init_point","sandbox_init_point","location","href","message","vaciarCarrito","preventDefault","direccion","dir","calle","altura","entreCalles","localidad","codigoPostal","guardarDatosFormulario","datosCliente","values","some","val","removeItem","validarFormulario","generarResumen","join","validarCampo","input","nextElementSibling","valido","toggle","cambiarPaso","pasoDestino","paso","pasoIndicador","boton","dataset","formDatos","this","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","ripple","scrollTop","deltaY","scrollHeight","clientHeight","passive","startY","touches","warn","opcionesFiltro","radio","datosBusqueda","filtrarProductos","mostrarProductos","cajaProductos","todo","satya","sagradaMadre","aromanza","limpiarHTML","productoHTML","idProducto","abrirModal","filter","firstChild","removeChild","modal","modalImagen","modalLinea","modalMarca","modalPrecio","modalListaAromas","cerrarModalBtn","pageYOffset","onerror","actualizarModalAromas","setupCarritoButton","cerrarModal","undefined","scrollTo","datosProducto","itemAroma","nombreAroma","contador","btnMenos","btnMas","actualizarBotones","current","actualizarAromasSeleccionados","sinStock","newBtn","cloneNode","parentNode","replaceChild","handleAgregarAlCarrito","keys","cant","initNavScroll","nav","lastScroll","isEnabled","handleScroll","currentScroll","MutationObserver","mutations","observe","attributes","attributeFilter"],"mappings":"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","file":"bundle.min.js","sourcesContent":["\r\n// Variables globales compartidas\r\nwindow.carrito = JSON.parse(localStorage.getItem('carrito')) || [];\r\nwindow.idProductoActual = '';\r\nwindow.aromasSeleccionados = {};\r\nwindow.scrollPosition = 0;\r\n\r\n// Exporta las variables si usas módulos\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = {\r\n        productos,\r\n        carrito,\r\n        idProductoActual,\r\n        aromasSeleccionados,\r\n        scrollPosition\r\n    };\r\n}\r\n\r\n// Función de notificación (compartida)\r\nfunction mostrarNotificacion(mensaje, tipo = 'exito') {\r\n    // Crear elemento de notificación si no existe\r\n    let notificacion = document.querySelector('.notificacion-global');\r\n    if (!notificacion) {\r\n        notificacion = document.createElement('div');\r\n        notificacion.className = 'notificacion-global';\r\n        document.body.appendChild(notificacion);\r\n    }\r\n    \r\n    // Configurar notificación\r\n    notificacion.textContent = mensaje;\r\n    notificacion.className = `notificacion-global ${tipo}`;\r\n    \r\n    // Mostrar\r\n    notificacion.style.display = 'block';\r\n    notificacion.style.opacity = '1';\r\n    \r\n    // Ocultar después de 3 segundos\r\n    setTimeout(() => {\r\n        notificacion.style.opacity = '0';\r\n        setTimeout(() => {\r\n            notificacion.style.display = 'none';\r\n        }, 300);\r\n    }, 3000);\r\n}","function normalizarTexto(texto) {\r\n    return texto.toLowerCase()\r\n        .normalize(\"NFD\")\r\n        .replace(/[\\u0300-\\u036f]/g, \"\")\r\n        .replace(/\\s+/g, \"-\")\r\n        .replace(/[^a-z0-9-]/g, \"\");\r\n}\r\n\r\nfunction verificarImagen(url) {\r\n    const img = new Image();\r\n    img.src = url;\r\n    return img.complete || img.width > 0;\r\n}\r\n\r\nconst catalogo = {\r\n    \"Satya\": {\r\n        \"Nag Champa\": {\r\n            precio: 1400,\r\n            aromas: [\r\n                {nombre: \"Nag Champa\", stock: 5}\r\n            ]\r\n        },\r\n        \"Series\": {\r\n            precio: 1200,\r\n            aromas: [\r\n                {nombre: 'AYURVEDA TRADICIONAL', stock: 2},\r\n                {nombre: 'CINNAMON', stock: 1},\r\n                {nombre: 'CITRONELLA', stock: 1},\r\n                {nombre: 'DRAGON BLOOD', stock: 1},\r\n                {nombre: 'EUCALIPTO', stock: 3},\r\n                {nombre: 'GOLD', stock: 1},\r\n                {nombre: 'INCIENSO', stock: 1},\r\n                {nombre: 'JAZMIN', stock: 0},\r\n                {nombre: 'KARMA', stock: 0},\r\n                {nombre: 'LAVANDA', stock: 0},\r\n                {nombre: 'LEMONGRASS', stock: 1},\r\n                {nombre: 'MEDITACION', stock: 1},\r\n                {nombre: 'MIRRA', stock: 0},\r\n                {nombre: 'MONEY', stock: 0},\r\n                {nombre: 'MUSK', stock: 1},\r\n                {nombre: 'NAMASTE', stock: 1},\r\n                {nombre: 'OODH', stock: 1},\r\n                {nombre: 'OPIUM', stock: 5},\r\n                {nombre: 'PALO SANTO', stock: 1},\r\n                {nombre: 'PATCHOULY', stock: 1},\r\n                {nombre: 'REIKI', stock: 6},\r\n                {nombre: 'ROSA', stock: 1},\r\n                {nombre: 'ROSEMARY', stock: 1},\r\n                {nombre: 'RUDA', stock: 7},\r\n                {nombre: 'SALVIA BLANCA', stock: 1},\r\n                {nombre: 'SANACION ESPIRITUAL', stock: 1},\r\n                {nombre: 'SANDALO WOOD', stock: 1},\r\n                {nombre: 'TULSI', stock: 1},\r\n                {nombre: 'VAINILLA', stock: 1},\r\n                {nombre: 'VIBRAS POSITIVAS', stock: 1}\r\n            ]\r\n        },\r\n        \"Super Hit\": {\r\n            precio: 1600,\r\n            aromas: [\r\n                {nombre: \"Super Hit\", stock: 5}\r\n            ]\r\n        },\r\n        \"Super Hit Series\": {\r\n            precio: 1500,\r\n            aromas: [\r\n                {nombre: 'ARABIAN NIGHT', stock: 0},\r\n                {nombre: 'BLUE BELL', stock: 3},\r\n                {nombre: 'DERI AROMA', stock: 3},\r\n                {nombre: 'DHARMA', stock: 3},\r\n                {nombre: 'PURPLE BEAUTY', stock: 3},\r\n                {nombre: 'YOGA RITUAL', stock: 3}\r\n            ]\r\n        }\r\n    },\r\n\r\n    // Aromanza\r\n    \"Aromanza\": {\r\n        \"Aceites Esenciales\": {\r\n            precio: 1800,\r\n            aromas: [\"Lavanda\",\r\n                {nombre: \"Eucalipto\", stock: 2},\r\n                {nombre: \"Citronela\", stock: 2}\r\n            ]\r\n        }\r\n    },\r\n\r\n    // Sagrada Madre\r\n    \"Sagrada Madre\": {\r\n        \"Palo Santo Sustentable\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Copal\", stock: 4},\r\n                {nombre: \"Lavanda\", stock: 2},\r\n                {nombre: \"Incienso\", stock: 2},\r\n                {nombre: \"Sustentable\", stock: 2},\r\n                {nombre: \"Sándalo\", stock: 2},\r\n                {nombre: \"Romero\", stock: 2},\r\n                {nombre: \"Rosas\", stock: 2},\r\n                {nombre: \"Mirra\", stock: 2},\r\n                {nombre: \"Champa\", stock: 2},\r\n                {nombre: \"Fresias\", stock: 2},\r\n                {nombre: \"Vainilla\", stock: 2},\r\n                {nombre: \"Yagra\", stock: 2},\r\n                {nombre: \"Ruda\", stock: 2},\r\n                {nombre: \"Jazmin\", stock: 2},\r\n                {nombre: \"Pachuli\", stock: 2},\r\n                {nombre: \"Violetas\", stock: 2},\r\n                {nombre: \"Salvia\", stock: 2},\r\n                {nombre: \"canela\", stock: 2}\r\n            ]\r\n        },\r\n        \"Natural\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Citronela - Palo Santo - Naranja\", stock: 4},\r\n                {nombre: \"Copal\", stock: 1},\r\n                {nombre: \"Incienso\", stock: 1},\r\n                {nombre: \"Mirra\", stock: 1},\r\n                {nombre: \"Ruda - Romero - Incienso\", stock: 1},\r\n                {nombre: \"Sándalo\", stock: 1},\r\n                {nombre: \"Yagra\", stock: 1},\r\n                {nombre: \"Pachuli\", stock: 1},\r\n                {nombre: \"Ámbar\", stock: 1},\r\n                {nombre: \"Benjui\", stock: 1},\r\n                {nombre: \"Mirra - Olíbano\", stock: 1},\r\n                {nombre: \"Salvia Blanca\", stock: 1}\r\n            ]\r\n        },\r\n        \"Cannabis\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Purple Hindu Kush\", stock:3},\r\n                {nombre: \"Lemon Haze\", stock: 1},\r\n                {nombre: \"Tropicana Cookies\", stock: 1},\r\n                {nombre: \"Blue Dream\", stock: 1},\r\n                {nombre: \"Mango Kush\", stock: 1},\r\n                {nombre: \"White Widow\", stock: 1}\r\n            ]\r\n        },\r\n        \"Yagra\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Rosa - Vainilla\", stock: 3},\r\n                {nombre: \"Violetas - Lavanda\", stock: 1},\r\n                {nombre: \"Orquídeas - Laurel\", stock: 1},\r\n                {nombre: \"Manzanilla - Olíbano\", stock: 1}]\r\n        },\r\n        \"Blend Masala\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Maha Masala\", stock: 2},\r\n                {nombre: \"Gaia Masala\", stock: 1}\r\n            ]\r\n        },\r\n        \"5 Elementos\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Renacer - Agua\", stock: 1},\r\n                {nombre: \"Armonía - Tierra\", stock: 1},\r\n                {nombre: \"Alegría - Aire\", stock: 1},\r\n                {nombre: \"Fuerza - Fuego\", stock: 1},\r\n                {nombre: \"Claridad - Ether\", stock: 1}]\r\n        },\r\n        \"Botánico\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Gardenias - Caléndula\", stock: 2},\r\n                {nombre: \"Jazmín - Rosas\", stock: 1},\r\n                {nombre: \"Té Verde - Champa\", stock: 1},\r\n                {nombre: \"Magnolias\", stock: 1},\r\n                {nombre: \"Fresias\", stock: 1},\r\n                {nombre: \"Nardo - Olíbano\", stock: 1},\r\n                {nombre: \"Clavo de Olor - Rosas\", stock: 1}]\r\n        },\r\n        \"Hiervas y Flores\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Anís - Canela - Olíbano\", stock: 3},\r\n                {nombre: \"Caléndula - Manzanilla - Olíbano\", stock: 1},\r\n                {nombre: \"Eucalipto - Laurel - Cedro\", stock: 1},\r\n                {nombre: \"Incienso Blanco\", stock: 1},\r\n                {nombre: \"Lavanda y Olíbano\", stock: 1},\r\n                {nombre: \"Rosas - Olíbano\", stock: 1},\r\n                {nombre: \"Salvia Blanca\", stock: 1}]\r\n        },\r\n        \"Patagonia\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Jazmín\", stock: 2},\r\n                {nombre: \"Naranja - Vainilla\", stock: 1},\r\n                {nombre: \"Neroli\", stock: 1},\r\n                {nombre: \"Palmarosa\", stock: 1},\r\n                {nombre: \"Rosa Mosqueta\", stock: 1},\r\n                {nombre: \"Ruda\", stock: 1},\r\n                {nombre: \"Tilo\", stock: 1},\r\n                {nombre: \"Lavanda Silvestre\", stock: 1},\r\n                {nombre: \"Hibiscus\", stock: 1},\r\n                {nombre: \"Yerba Mate\", stock: 1},\r\n                {nombre: \"Algarroba - Vainilla\", stock: 1},\r\n                {nombre: \"Limón\", stock: 1}]\r\n        },\r\n        \"Energía Limpia\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Renacer\", stock: 2},\r\n                {nombre: \"Revitalizar\", stock: 3},\r\n                {nombre: \"Armonizar\", stock: 3},\r\n                {nombre: \"Sanar\", stock: 3}]\r\n        },\r\n        \"Triple Combinado\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Triple Combinado\", stock: 4},\r\n            ]\r\n        },\r\n        \"DÚO\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Limpieza - Armonía\", stock: 1},\r\n                {nombre: \"Fortuna - Purifiación\", stock: 2},\r\n                {nombre: \"7 Poderes - Renacer\", stock: 2},\r\n                {nombre: \"Sanación - Apertura\", stock: 2}]\r\n        },\r\n        \"Artesano x30\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Lavanda\", stock: 1},\r\n                {nombre: \"Rosas\", stock: 2},\r\n                {nombre: \"Yagra\", stock: 2},\r\n                {nombre: \"Sándalo\", stock: 2},\r\n                {nombre: \"Copal\", stock: 2},\r\n                {nombre: \"Incienso\", stock: 2},\r\n                {nombre: \"Ruda - Romero - Incienso\", stock: 2},\r\n                {nombre: \"Palo Santo\", stock: 2},\r\n                {nombre: \"Palo Santo - Vainilla\", stock: 2},\r\n                {nombre: \"Palo Santo - Champa\", stock: 2},\r\n                {nombre: \"Palo Santo - Rosa\", stock: 2},\r\n                {nombre: \"Palo Santo - Jazmín\", stock: 2},\r\n                {nombre: \"Palo Santo - Lavanda\", stock: 2},\r\n                {nombre: \"Té Verde - Flor de Champa\", stock: 2},\r\n                {nombre: \"Gardenias - Caléndula\", stock: 2},\r\n                {nombre: \"Jazmín - Rosa\", stock: 2},\r\n                {nombre: \"Lemon Grass - Olíbano\", stock: 2},\r\n                {nombre: \"Flor del Árbol Paraíso\", stock: 2},\r\n                {nombre: \"Sangre de Drago\", stock: 2},\r\n                {nombre: \"Palo Santo - Jengibre\", stock: 2},\r\n                {nombre: \"Reina de la Noche - Lavanda\", stock: 2},\r\n                {nombre: \"Citronella - Naranja - Palo Santo\", stock: 2},\r\n                {nombre: \"Magnolias\", stock: 2},\r\n                {nombre: \"Clavo de Olor - Rosas\", stock: 2},\r\n                {nombre: \"Nardo - Olíbano\", stock: 2},\r\n                {nombre: \"Palo Santo Yagra\", stock: 2},\r\n                {nombre: \"Citronella del Norte\", stock: 2}]\r\n        },\r\n        \"Artesano x5\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Incienso\", stock: 1},\r\n                {nombre: \"Palo Santo - Incienso\", stock: 2},\r\n                {nombre: \"Palo Santo - Lavanda\", stock: 2},\r\n                {nombre: \"Palo Santo - Romero\", stock: 2},\r\n                {nombre: \"Palo Santo - Ruda\", stock: 2},\r\n                {nombre: \"Ruda - Romero - Incienso\", stock: 2},\r\n                {nombre: \"Sándalo\", stock: 2},\r\n                {nombre: \"Yagra\", stock: 2},\r\n                {nombre: \"Palo Santo\", stock: 2},\r\n                {nombre: \"Palo Santo - Fresias\", stock: 2},\r\n                {nombre: \"Palo Santo - Pachuli\", stock: 2},\r\n                {nombre: \"Palo Santo - Sándalo\", stock: 2}]\r\n        },\r\n        \"7 Chakras\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"7 Chakras\", stock : 1},\r\n            ]\r\n        },\r\n        \"Sagrado\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Amor Eterno\", stock: 2},\r\n                {nombre: \"Encuentro Divino\", stock: 1},\r\n                {nombre: \"Guía Espiritual\", stock: 1},\r\n                {nombre: \"Tercer Ojo\", stock: 1},\r\n                {nombre: \"Kundalini\", stock: 1},\r\n                {nombre: \"Yoga\", stock: 1},\r\n                {nombre: \"Meditación\", stock: 1},\r\n                {nombre: \"Samadhi\", stock: 1}]\r\n        },\r\n        \"Ritual\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Limpieza Energética\", stock: 2},\r\n                {nombre: \"Luna Llena\", stock: 1},\r\n                {nombre: \"Tranquilidad\", stock: 1},\r\n                {nombre: \"Purificación\", stock: 1},\r\n                {nombre: \"Brillar\", stock: 1},\r\n                {nombre: \"Fuerza Interior\", stock: 1},\r\n                {nombre: \"Amor Propio\", stock: 1},\r\n                {nombre: \"Ritual del Cacao\", stock: 1},\r\n                {nombre: \"Abundancia\", stock: 1},\r\n                {nombre: \"Manifestar\", stock: 1},\r\n                {nombre: \"Gratitud\", stock: 1},\r\n                {nombre: \"Empoderamiento\", stock: 1}]\r\n        },\r\n        \"Palo Santo Sustentable x4\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Palo Santo\", stock: 2},\r\n                {nombre: \"Palo Santo - Sándalo\", stock: 1},\r\n                {nombre: \"Palo Santo - Olíbano\", stock: 1},\r\n                {nombre: \"Palo Santo - Lavanda\", stock: 1}]\r\n        },\r\n        \"India Masala\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Sol: Fuerza y Energía\", stock: 2},\r\n                {nombre: \"Día: Enfoque y Claridad\", stock: 1},\r\n                {nombre: \"Luz: Guía Espiritual\", stock: 1},\r\n                {nombre: \"Alma: Calma y Conexión\", stock: 1}]\r\n        },\r\n        \"India Black\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Luna - Intuición\", stock: 2},\r\n                {nombre: \"Noche - Amor Eterno\", stock: 1},\r\n                {nombre: \"Enigma: Guía Espiritual\", stock: 1},\r\n                {nombre: \"Divina - Crecer\", stock: 1},\r\n                {nombre: \"Astro: Fuerza Interior\", stock: 1},\r\n                {nombre: \"Origen - Confianza\", stock: 1},\r\n                {nombre: \"Brisa - Calma\", stock: 1},\r\n                {nombre: \"Mystic - Magia\", stock: 1},\r\n                {nombre: \"Energía - Expansión\", stock: 1},\r\n                {nombre: \"Brillo Iluminación\", stock: 1},\r\n                {nombre: \"Cosmos - Conexón\", stock: 1},\r\n                {nombre: \"Eclipse - Unión\", stock: 1}]\r\n        },\r\n        \"Bombita Defumación x4\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"7 Hierbas Copal\", stock: 2},\r\n                {nombre: \"7 Elementos Puros\", stock: 1},\r\n                {nombre: \"abre caminos\", stock: 1},\r\n                {nombre: \"defumación completa\", stock: 1},\r\n                {nombre: \"atrae dinero\", stock: 1},\r\n                {nombre: \"destrabe\", stock: 1},\r\n                {nombre: \"limpieza energética\", stock: 1},\r\n                {nombre: \"palo santo\", stock: 1},\r\n                {nombre: \"7 poderes\", stock: 1},\r\n                {nombre: \"abundancia infinita\", stock: 1},\r\n                {nombre: \"limpieza aurica\", stock: 1},\r\n                {nombre: \"atracción mística\", stock: 1}]\r\n        },\r\n        \"Bombita Herbal x4\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"fortuna\", stock: 2},\r\n                {nombre: \"amor\", stock: 1},\r\n                {nombre: \"armonía\", stock: 1},\r\n                {nombre: \"renacer\", stock: 1},\r\n                {nombre: \"7 poderes\", stock: 1},\r\n                {nombre: \"destrabar\", stock: 1},\r\n                {nombre: \"purificar\", stock: 1},\r\n                {nombre: \"protección\", stock: 1}]\r\n        },\r\n        \"Bombita Defumación x8\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Yagra - Canela\", stock: 2},\r\n                {nombre: \"benjuí - almizcle\", stock: 1},\r\n                {nombre: \"limpieza energética\", stock: 1},\r\n                {nombre: \"7 elementos puros\", stock: 1},\r\n                {nombre: \"mirra - incienso\", stock: 1},\r\n                {nombre: \"palo santo\", stock: 1},\r\n                {nombre: \"7 hierbas copal\", stock: 1},\r\n                {nombre: \"estoraque\", stock: 1}]\r\n        },\r\n        \"Bombita Defumación Premium x8\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"olíbano - lavanda\", stock: 2},\r\n                {nombre: \"olíbano - naranja\", stock: 1},\r\n                {nombre: \"olíbano - salvia\", stock: 1},\r\n                {nombre: \"olíbano - sándalo\", stock: 1},\r\n                {nombre: \"olíbano - palo santo\", stock: 1},\r\n                {nombre: \"olíbano - rosas\", stock: 1},\r\n                {nombre: \"olíbano - canela\", stock: 1},\r\n                {nombre: \"olíbano - manzanilla\", stock: 1}]\r\n        },\r\n        \"Bomba Herbal XL\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"energía limpia\", stock: 2},\r\n                {nombre: \"purificación\", stock: 1}]\r\n        },\r\n        \"Bombita 7 Chakras\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Bombita 7 Chakras\", stock: 2},\r\n            ]\r\n        },\r\n        \"Bombita de Defumación Activada x25\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"7 hierbas copal\", stock: 2},\r\n                {nombre: \"7 poderes\", stock: 3},\r\n                {nombre: \"abre caminos\", stock: 3},\r\n                {nombre: \"atracción mística\", stock: 3},\r\n                {nombre: \"atrae dinero\", stock: 3},\r\n                {nombre: \"defumación completa\", stock: 3},\r\n                {nombre: \"destrabe\", stock: 3},\r\n                {nombre: \"fuerza infinita\", stock: 3},\r\n                {nombre: \"limpieza aurica\", stock: 3},\r\n                {nombre: \"limpieza energética\", stock: 3},\r\n                {nombre: \"palo santo\", stock: 3}]\r\n        },\r\n        \"Cosmos\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Cosmos\", stock: 3}\r\n            ]\r\n        },\r\n        \"Bombita Ritual\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"abundancia\", stock: 1},\r\n                {nombre: \"amor propio\", stock: 1},\r\n                {nombre: \"brillar\", stock: 1},\r\n                {nombre: \"ritual del cacao\", stock: 1},\r\n                {nombre: \"empoderamiento\", stock: 1},\r\n                {nombre: \"fuerza interior\", stock: 1},\r\n                {nombre: \"gratitud\", stock: 1},\r\n                {nombre: \"limpieza energética\", stock: 1},\r\n                {nombre: \"luna llena\", stock: 1},\r\n                {nombre: \"manifestar\", stock: 1},\r\n                {nombre: \"purificación\", stock: 1},\r\n                {nombre: \"tranquilidad\", stock: 1}]\r\n        },\r\n        \"Kits Surtidos\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Kit pétalos de amor\", stock: 1},\r\n                {nombre: \"kit limpieza energética\", stock: 1},\r\n                {nombre: \"kit turmalina\", stock: 1},\r\n                {nombre: \"kit luz\", stock: 1},\r\n                {nombre: \"kit astral\", stock: 1}]\r\n        },\r\n        \"kit herbal\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"prosperidad\", stock: 1},\r\n                {nombre: \"protección y sanación\", stock: 1},\r\n                {nombre: \"relajación y armonización\", stock: 1},\r\n                {nombre: \"purificación\", stock: 1}]\r\n        },\r\n        \"kit humito sagrado\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"7 energía\", stock: 1},\r\n                {nombre: \"armonía\", stock: 1},\r\n                {nombre: \"prosperidad\", stock: 1},\r\n                {nombre: \"energía limpia\", stock: 1},\r\n                {nombre: \"purificación\", stock: 1},\r\n                {nombre: \"amor y unión\", stock: 1},\r\n                {nombre: \"protección\", stock: 1}]\r\n        },\r\n        \"incienso en polvo\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Sándalo\", stock: 1},\r\n                {nombre: \"limpieza energética\", stock: 1},\r\n                {nombre: \"palo santo\", stock: 1},\r\n                {nombre: \"7 poderes\", stock: 1},\r\n                {nombre: \"rosas\", stock: 1},\r\n                {nombre: \"jazmín\", stock: 1},\r\n                {nombre: \"citronella - naranja\", stock: 1},\r\n                {nombre: \"vainilla - incienso\", stock: 1},\r\n                {nombre: \"yagra - madera de oriente\", stock: 1},\r\n                {nombre: \"benjui - estoraque\", stock: 1},\r\n                {nombre: \"alcanfor - laurel\", stock: 1},\r\n                {nombre: \"lavanda\", stock: 1}]\r\n        },\r\n        \"pirámide energética\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"rosas\", stock: 1},\r\n                {nombre: \"yagra - incienso\", stock: 1},\r\n                {nombre: \"olíbano puro\", stock: 1},\r\n                {nombre: \"7 hierbas olíbano\", stock: 1},\r\n                {nombre: \"4 poderes\", stock: 1},\r\n                {nombre: \"canela - olíbano\", stock: 1},\r\n                {nombre: \"manzanilla - olíbano\", stock: 1},\r\n                {nombre: \"romero - olíbano\", stock: 1},\r\n                {nombre: \"citronella - caléndula - ruda\", stock: 1}]\r\n        },\r\n        \"incienso en cono\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"caléndula - romero\", stock: 1},\r\n                {nombre: \"pachuli - palo santo\", stock: 1},\r\n                {nombre: \"pétalos de rosas\", stock: 1},\r\n                {nombre: \"sándalo - yagra\", stock: 1},\r\n                {nombre: \"canela - vainilla\", stock: 1},\r\n                {nombre: \"sándalo - copal\", stock: 1},\r\n                {nombre: \"citronela - naranja\", stock: 1},\r\n                {nombre: \"ambar - naranja\", stock: 1},\r\n                {nombre: \"lavanda - flores violetas\", stock: 1},\r\n                {nombre: \"té verde\", stock: 1},\r\n                {nombre: \"ruda - romero\", stock: 1},\r\n                {nombre: \"flor de champa\", stock: 1}]\r\n        },\r\n        \"geometría sagrada\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"benjui - yagra\", stock: 1},\r\n                {nombre: \"incienso - ambar\", stock: 1},\r\n                {nombre: \"rosas - incienso\", stock: 1},\r\n                {nombre: \"sándalo\", stock: 1},\r\n                {nombre: \"palo santo - mirra\", stock: 1},\r\n                {nombre: \"31 hierbas\", stock: 1}]\r\n        },\r\n        \"pastillas de defumación x4\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"incienso\", stock: 1},\r\n                {nombre: \"salvia blanca\", stock: 1},\r\n                {nombre: \"ruda\", stock: 1},\r\n                {nombre: \"lavanda\", stock: 1},\r\n                {nombre: \"anís - canela - romero\", stock: 1},\r\n                {nombre: \"palo santo\", stock: 1}]\r\n        },\r\n        \"siete días de limpieza\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"limpieza surtidas\", stock: 2},\r\n                {nombre: \"sándalo - yagra\", stock: 1},\r\n                {nombre: \"copal - vainilla\", stock: 1},\r\n                {nombre: \"mirra - benjuí\", stock: 1},\r\n                {nombre: \"rosa - lavanda\", stock: 1},\r\n                {nombre: \"incienso sándalo\", stock: 1}]\r\n        },\r\n        \"Sahumitos x5\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"7 hierbas\", stock: 2},\r\n                {nombre: \"canela - anís\", stock: 1},\r\n                {nombre: \"palo santo\", stock: 1},\r\n                {nombre: \"sándalo\", stock: 1},\r\n                {nombre: \"incienso\", stock: 1},\r\n                {nombre: \"naranja - citronella\", stock: 1},\r\n                {nombre: \"estoraque - alcanfor\", stock: 1},\r\n                {nombre: \"ruda\", stock: 1},\r\n                {nombre: \"salvia blanca\", stock: 1},\r\n                {nombre: \"rosas\", stock: 1},\r\n                {nombre: \"mirra - palo santo\", stock: 1},\r\n                {nombre: \"hierbas y maderas\", stock: 1},\r\n                {nombre: \"resinas y especias\", stock: 1},\r\n                {nombre: \"flores aromáticas\", stock: 1},\r\n                {nombre: \"copal\", stock: 1},\r\n                {nombre: \"blanco yagra\", stock: 1},\r\n                {nombre: \"romero\", stock: 1},\r\n                {nombre: \"calendula - manzanilla\", stock: 1}]\r\n        },\r\n        \"sahumito x1\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"7 hierbas\", stock: 2},\r\n                {nombre: \"canela - anís\", stock: 1},\r\n                {nombre: \"copal\", stock: 1},\r\n                {nombre: \"palo santo\", stock: 1},\r\n                {nombre: \"sándalo\", stock: 1},\r\n                {nombre: \"naranja - citronella\", stock: 1},\r\n                {nombre: \"rosas\", stock: 1},\r\n                {nombre: \"ruda\", stock: 1},\r\n                {nombre: \"salvia blanca\", stock: 1},\r\n                {nombre: \"blanco yagra\", stock: 1},\r\n                {nombre: \"estoraque - alcanfor\", stock: 1},\r\n                {nombre: \"incienso\", stock: 1},\r\n                {nombre: \"mirra - palo santo\", stock: 1},\r\n                {nombre: \"romero\", stock: 1}]\r\n        },\r\n        \"sahumos medianos y grandes\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"10 hierbas\", stock: 2},\r\n                {nombre: \"copal\", stock: 1},\r\n                {nombre: \"mirra - palo santo\", stock: 1},\r\n                {nombre: \"lavanda\", stock: 1},\r\n                {nombre: \"limpieza energética\", stock: 1},\r\n                {nombre: \"sándalo\", stock: 1},\r\n                {nombre: \"salvia\", stock: 1}]\r\n        },\r\n        \"Palo Santo stick\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"blend herbal\", stock: 1},\r\n            ]\r\n        },\r\n        \"perlas aromáticas en saquitos\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"jazmín\", stock: 2},\r\n                {nombre: \"lavanda\", stock: 1},\r\n                {nombre: \"rosas\", stock: 1},\r\n                {nombre: \"limón\", stock: 1}]\r\n        },\r\n        \"perlas aromáticas en caja\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"vainilla\", stock: 2},\r\n                {nombre: \"frutilla\", stock: 1},\r\n                {nombre: \"jazmín\", stock: 1},\r\n                {nombre: \"lavanda\", stock: 1},\r\n                {nombre: \"rosas\", stock: 1},\r\n                {nombre: \"flores\", stock: 1},\r\n                {nombre: \"coco\", stock: 1},\r\n                {nombre: \"primavera\", stock: 1},\r\n                {nombre: \"limón\", stock: 1},\r\n                {nombre: \"hindu\", stock: 1},\r\n                {nombre: \"reina de la noche\", stock: 1},\r\n                {nombre: \"sándalo\", stock: 1}]\r\n        },\r\n        \"cristales de luz\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"vainilla - orquídeas negras\", stock: 2},\r\n                {nombre: \"flor de champa\", stock: 1},\r\n                {nombre: \"laurel y orquídeas\", stock: 1},\r\n                {nombre: \"violeta - lavanda\", stock: 1}]\r\n        },\r\n        \"aceite esencial de oleum\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"revitalizante\", stock: 2},\r\n                {nombre: \"relajante\", stock: 1},\r\n                {nombre: \"armonía\", stock: 1},\r\n                {nombre: \"purificación\", stock: 1},\r\n                {nombre: \"equilibrio\", stock: 1},\r\n                {nombre: \"limpieza energética\", stock: 1},\r\n                {nombre: \"calma\", stock: 1},\r\n                {nombre: \"energía renovada\", stock: 1},\r\n                {nombre: \"afrodisíaco\", stock: 1},\r\n                {nombre: \"concentración\", stock: 1},\r\n                {nombre: \"incienso\", stock: 1}]\r\n        },\r\n        \"esencias para hornillo\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"rosas\", stock: 2},\r\n                {nombre: \"vainilla\", stock: 1},\r\n                {nombre: \"lavanda\", stock: 1},\r\n                {nombre: \"coco\", stock: 1},\r\n                {nombre: \"jazmín\", stock: 1},\r\n                {nombre: \"incienso\", stock: 1},\r\n                {nombre: \"mirra\", stock: 1},\r\n                {nombre: \"peras y flores blancas\", stock: 1},\r\n                {nombre: \"limón\", stock: 1},\r\n                {nombre: \"sándalo\", stock: 1}]\r\n        },\r\n        \"Hiervas en sobre\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"caléndula\", stock: 2},\r\n                {nombre: \"lemongrass\", stock: 1},\r\n                {nombre: \"contrayerba\", stock: 1},\r\n                {nombre: \"ruda\", stock: 1},\r\n                {nombre: \"eucalipto\", stock: 1},\r\n                {nombre: \"lavanda\", stock: 1},\r\n                {nombre: \"rosa\", stock: 1},\r\n                {nombre: \"romero\", stock: 1},\r\n                {nombre: \"salvia\", stock: 1},\r\n                {nombre: \"manzanilla\", stock: 1},\r\n                {nombre: \"jarilla\", stock: 1},\r\n                {nombre: \"té verde\", stock: 1},\r\n                {nombre: \"naranja\", stock: 1},\r\n                {nombre: \"laurel\", stock: 1}]\r\n        },\r\n        \"hiervas y resinas por kilo\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"sangre de drago\", stock: 2},\r\n                {nombre: \"lavanda premium\", stock: 1},\r\n                {nombre: \"mirra\", stock: 1},\r\n                {nombre: \"sándalo\", stock: 1},\r\n                {nombre: \"estoraque premium\", stock: 1}]\r\n        },\r\n        \"Bomba carbón x12\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"lavanda\", stock: 2},\r\n                {nombre: \"incienso\", stock: 1},\r\n                {nombre: \"yagra\", stock: 1},\r\n                {nombre: \"citronella - naranja\", stock: 1},\r\n                {nombre: \"limpieza energética\", stock: 1},\r\n                {nombre: \"7 poderes\", stock: 1}]\r\n        },\r\n        \"Bomba carbón x24\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"citronella - naranja\", stock: 2},\r\n                {nombre: \"limpieza energética\", stock: 1},\r\n                {nombre: \"incienso\", stock: 1},\r\n                {nombre: \"yagra\", stock: 1},\r\n                {nombre: \"lavnada\", stock: 1},\r\n                {nombre: \"7 poderes\", stock: 1}]\r\n        },\r\n        \"Carbón redondo neutro\": {\r\n            precio: 1800,\r\n            aromas: [\r\n                {nombre: \"Carbón Redondo Neutro\", stock: 2}]\r\n        }\r\n    }\r\n    // ¡Agrega más marcas aquí!\r\n};\r\n\r\nconst productos = [];\r\n\r\nfor(const [marca, lineas] of Object.entries(catalogo)) {\r\n    for(const [linea, datos] of Object.entries(lineas)) {\r\n        // Cambia la ruta para que sea relativa al root\r\n        const imagen = `../../build/img/${normalizarTexto(marca)}-${normalizarTexto(linea)}.jpg`;\r\n        productos.push({\r\n            imagen: imagen,\r\n            marca: marca,\r\n            linea: linea,\r\n            precio: `<span>$</span>${datos.precio}`, // Usar template string\r\n            id: `${marca}-${linea}`.replace(/\\s+/g, \"-\").toLowerCase()\r\n        });\r\n    }\r\n}\r\n\r\nconsole.log(productos); // Base de datos limpia\r\n\r\n// Al final del archivo db.js\r\nwindow.productos = productos; // Hace disponible productos globalmente\r\nwindow.catalogo = catalogo; // Añadir al final","// Al inicio del archivo\r\nif (!window.carrito) {\r\n    window.carrito = JSON.parse(localStorage.getItem('carrito')) || [];\r\n}\r\n\r\n// Variables del carrito con verificaciones\r\nconst carritoIcono = document.querySelector('.carrito-icono');\r\nconst carritoDesplegable = document.querySelector('.carrito-desplegable');\r\nconst carritoItems = document.querySelector('.carrito-items');\r\nconst carritoContador = document.querySelector('.carrito-contador');\r\nconst carritoTotal = document.querySelector('.carrito-total span');\r\nconst botonComprar = document.querySelector('.boton-comprar');\r\nconst botonVaciar = document.querySelector('.boton-vaciar');\r\nconst cerrarCarritoBtn = document.querySelector('.cerrar-carrito');\r\nconst carritoOverlay = document.querySelector('.carrito-overlay');\r\n\r\n// Solo agregar eventos si los elementos existen\r\nif (carritoIcono) carritoIcono.addEventListener('click', toggleCarrito);\r\nif (botonComprar) botonComprar.addEventListener('click', comprar);\r\nif (botonVaciar) botonVaciar.addEventListener('click', vaciarCarrito);\r\nif (cerrarCarritoBtn) cerrarCarritoBtn.addEventListener('click', cerrarCarrito);\r\nif (carritoOverlay) {\r\n    carritoOverlay.addEventListener('click', (e) => {\r\n        // Prevenir el scroll durante la animación de cierre\r\n        e.preventDefault();\r\n        cerrarCarrito();\r\n    });\r\n}\r\n\r\n// Funciones del carrito\r\nfunction toggleCarrito() {\r\n    const isActive = carritoDesplegable.classList.contains('active');\r\n    \r\n    if (!isActive) {\r\n        // Abrir carrito\r\n        carritoDesplegable.classList.add('active');\r\n        carritoOverlay.style.display = 'block';\r\n        setTimeout(() => {\r\n            carritoOverlay.style.opacity = '1';\r\n        }, 10);\r\n        \r\n        // Bloquear scroll del body y habilitar scroll solo en el carrito\r\n        document.body.style.overflow = 'hidden';\r\n        document.documentElement.style.overflow = 'hidden';\r\n        carritoDesplegable.style.overflowY = 'auto';\r\n        \r\n    } else {\r\n        // Cerrar carrito\r\n        cerrarCarrito();\r\n    }\r\n}\r\n\r\n// Función para cerrar el carrito\r\nfunction cerrarCarrito() {\r\n    carritoDesplegable.classList.remove('active');\r\n    carritoOverlay.style.opacity = '0';\r\n    \r\n    // Restaurar scroll del body\r\n    document.body.style.overflow = '';\r\n    document.documentElement.style.overflow = '';\r\n    carritoDesplegable.style.overflowY = '';\r\n    \r\n    setTimeout(() => {\r\n        carritoOverlay.style.display = 'none';\r\n    }, 300);\r\n}\r\n\r\nfunction actualizarCarrito() {\r\n    carritoItems.innerHTML = '';\r\n    let total = 0;\r\n    \r\n    carrito.forEach((item, index) => {\r\n        const producto = productos.find(p => p.id === item.id);\r\n        if (producto) {\r\n            const precioNumerico = parseInt(producto.precio.replace(/[^0-9]/g, ''));\r\n            const subtotal = precioNumerico * item.cantidad;\r\n            total += subtotal;\r\n            \r\n            const carritoItem = document.createElement('div');\r\n            carritoItem.classList.add('carrito-item');\r\n            carritoItem.innerHTML = `\r\n                <div class=\"carrito-item-info\">\r\n                    <h4>${producto.linea} - ${producto.marca}</h4>\r\n                    <p>${item.aroma} x ${item.cantidad}</p>\r\n                    <p>$${subtotal}</p>\r\n                </div>\r\n                <button class=\"eliminar-item\" data-index=\"${index}\">&times;</button>\r\n            `;\r\n            carritoItems.appendChild(carritoItem);\r\n        }\r\n    });\r\n    \r\n    // Actualizar total y contador\r\n    carritoTotal.textContent = `$${total}`;\r\n    carritoContador.textContent = carrito.reduce((sum, item) => sum + item.cantidad, 0);\r\n    localStorage.setItem('carrito', JSON.stringify(carrito));\r\n        \r\n    // Deshabilitar botón siguiente si no hay productos\r\n    const botonSiguiente = document.querySelector('.boton-siguiente[data-paso=\"2\"]');\r\n    if (botonSiguiente) {\r\n        botonSiguiente.disabled = carrito.length === 0;\r\n    }\r\n        \r\n    // Agregar eventos a los botones de eliminar (solo este, elimina cualquier otro similar)\r\n    document.querySelectorAll('.eliminar-item').forEach(btn => {\r\n        btn.addEventListener('click', (e) => {\r\n            const index = e.target.getAttribute('data-index');\r\n            carrito.splice(index, 1);\r\n            actualizarCarrito();\r\n        });\r\n    });\r\n}\r\n\r\nfunction agregarAlCarrito() {\r\n    if (!window.idProductoActual || !window.aromasSeleccionados) return;\r\n\r\n    const producto = window.productos.find(p => p.id === window.idProductoActual);\r\n    if (!producto) return;\r\n\r\n    Object.entries(window.aromasSeleccionados).forEach(([aroma, cantidad]) => {\r\n        if (cantidad <= 0) return;\r\n\r\n        const itemExistenteIndex = window.carrito.findIndex(item => \r\n            item.id === window.idProductoActual && \r\n            item.aroma === aroma\r\n        );\r\n\r\n        if (itemExistenteIndex >= 0) {\r\n            window.carrito[itemExistenteIndex].cantidad += cantidad;\r\n        } else {\r\n            window.carrito.push({\r\n                id: window.idProductoActual,\r\n                marca: producto.marca,\r\n                linea: producto.linea,\r\n                aroma: aroma,\r\n                cantidad: cantidad,\r\n                precio: producto.precio,\r\n                precioNumerico: parseInt(producto.precio.replace(/[^0-9]/g, ''))\r\n            });\r\n        }\r\n    });\r\n\r\n    actualizarCarrito();\r\n}\r\n\r\n// Función de compra unificada y mejorada\r\nasync function comprar() {\r\n    const botonPagar = document.querySelector('.boton-pagar');\r\n    try {\r\n        // Validar carrito\r\n        if (!window.carrito || window.carrito.length === 0) {\r\n            mostrarNotificacion('Tu carrito está vacío', 'error');\r\n            return;\r\n        }\r\n\r\n        // Validar datos del cliente\r\n        const nombre = document.getElementById('nombre')?.value.trim();\r\n        const email = document.getElementById('email')?.value.trim();\r\n        const telefono = document.getElementById('telefono')?.value.trim();\r\n\r\n        if (!nombre || nombre.length < 5) {\r\n            mostrarNotificacion('Nombre debe tener al menos 5 caracteres', 'error');\r\n            return;\r\n        }\r\n\r\n        if (!email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\r\n            mostrarNotificacion('Ingresa un email válido', 'error');\r\n            return;\r\n        }\r\n\r\n        if (!telefono || !/^\\d{10}$/.test(telefono)) {\r\n            mostrarNotificacion('Teléfono debe tener 10 dígitos', 'error');\r\n            return;\r\n        }\r\n\r\n        // Mostrar estado de carga\r\n        if (botonPagar) {\r\n            botonPagar.disabled = true;\r\n            botonPagar.innerHTML = '<span class=\"spinner\"></span> Procesando...';\r\n        }\r\n\r\n        // Preparar items para MP\r\n        const itemsMP = window.carrito.map(item => {\r\n            const precioNumerico = item.precioNumerico || parseInt(item.precio?.replace(/[^0-9]/g, '')) || 0;\r\n            \r\n            if (precioNumerico <= 0) {\r\n                throw new Error(`El producto ${item.linea} - ${item.aroma} no tiene precio válido`);\r\n            }\r\n\r\n            return {\r\n                id: item.id || `prod_${Math.random().toString(36).substr(2, 5)}`,\r\n                title: `${item.linea || 'Producto'} - ${item.aroma || 'Sin aroma'}`.substring(0, 50),\r\n                unit_price: precioNumerico,\r\n                quantity: Number(item.cantidad) || 1,\r\n                currency_id: 'ARS',\r\n                description: `Producto: ${item.linea}, Aroma: ${item.aroma}`,\r\n                linea: item.linea,\r\n                aroma: item.aroma\r\n            };\r\n        });\r\n\r\n        // Datos del comprador\r\n        const payerMP = {\r\n            name: nombre,\r\n            email: email,\r\n            phone: {\r\n                area_code: telefono.substring(0, 2) || \"11\",\r\n                number: telefono.substring(2) || telefono\r\n            },\r\n            address: {\r\n                street_name: document.getElementById('calle')?.value.trim() || \"\",\r\n                street_number: document.getElementById('altura')?.value.trim() || \"\",\r\n                zip_code: document.getElementById('codigo-postal')?.value.trim() || \"\"\r\n            }\r\n        };\r\n\r\n        console.log('Enviando a API:', { items: itemsMP, payer: payerMP });\r\n\r\n        // Llamar al backend\r\n        const response = await fetch('http://localhost:3001/api/create-preference', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                items: itemsMP,\r\n                payer: payerMP\r\n            })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.error || 'Error al procesar el pago');\r\n        }\r\n\r\n        const responseData = await response.json();\r\n        \r\n        if (!responseData.id || (!responseData.init_point && !responseData.sandbox_init_point)) {\r\n            throw new Error('No se recibió URL de pago válida del servidor');\r\n        }\r\n\r\n        // Redireccionar al checkout de prueba (usa sandbox_init_point)\r\n        window.location.href = responseData.sandbox_init_point;\r\n\r\n    } catch (error) {\r\n        console.error('Error en proceso de compra:', error);\r\n        mostrarNotificacion(error.message || 'Error al procesar el pago', 'error');\r\n    } finally {\r\n        if (botonPagar) {\r\n            botonPagar.disabled = false;\r\n            botonPagar.innerHTML = 'Finalizar Compra';\r\n        }\r\n    }\r\n}\r\n\r\n// Configurar evento del botón\r\ndocument.querySelector('.boton-pagar')?.addEventListener('click', async (e) => {\r\n    e.preventDefault();\r\n    await comprar();\r\n});\r\n\r\nfunction vaciarCarrito() {\r\n    carrito = [];\r\n    actualizarCarrito();\r\n}\r\n\r\n// Formulario y Pasos\r\n\r\n// Cargar datos guardados al iniciar\r\nif (localStorage.getItem('datosCliente')) {\r\n    const datos = JSON.parse(localStorage.getItem('datosCliente'));\r\n    \r\n    // Campos principales (solo si existen y no están vacíos)\r\n    if (datos.nombre && datos.nombre.trim() !== '') {\r\n        document.getElementById('nombre').value = datos.nombre;\r\n    }\r\n    if (datos.email && datos.email.trim() !== '') {\r\n        document.getElementById('email').value = datos.email;\r\n    }\r\n    if (datos.telefono && datos.telefono.trim() !== '') {\r\n        document.getElementById('telefono').value = datos.telefono;\r\n    }\r\n    \r\n    // Campos de dirección (solo si existen y no están vacíos)\r\n    if (datos.direccion) {\r\n        const dir = datos.direccion;\r\n        if (dir.calle && dir.calle.trim() !== '') {\r\n            document.getElementById('calle').value = dir.calle;\r\n        }\r\n        if (dir.altura && dir.altura.trim() !== '') {\r\n            document.getElementById('altura').value = dir.altura;\r\n        }\r\n        if (dir.entreCalles && dir.entreCalles.trim() !== '') {\r\n            document.getElementById('entre-calles').value = dir.entreCalles;\r\n        }\r\n        if (dir.localidad && dir.localidad.trim() !== '') {\r\n            document.getElementById('localidad').value = dir.localidad;\r\n        }\r\n        if (dir.codigoPostal && dir.codigoPostal.trim() !== '') {\r\n            document.getElementById('codigo-postal').value = dir.codigoPostal;\r\n        }\r\n    }\r\n}\r\n\r\n// Función para guardar datos del formulario (nueva versión)\r\nfunction guardarDatosFormulario() {\r\n    const datosCliente = {\r\n        nombre: document.getElementById('nombre').value.trim(),\r\n        email: document.getElementById('email').value.trim(),\r\n        telefono: document.getElementById('telefono').value.trim(),\r\n        direccion: {\r\n            calle: document.getElementById('calle').value.trim(),\r\n            altura: document.getElementById('altura').value.trim(),\r\n            entreCalles: document.getElementById('entre-calles').value.trim(),\r\n            localidad: document.getElementById('localidad').value.trim(),\r\n            codigoPostal: document.getElementById('codigo-postal').value.trim()\r\n        }\r\n    };\r\n    \r\n    // Solo guardar si hay al menos un campo con datos\r\n    const hayDatos = Object.values(datosCliente).some(val => val !== '') || \r\n                    Object.values(datosCliente.direccion).some(val => val !== '');\r\n    \r\n    if (hayDatos) {\r\n        localStorage.setItem('datosCliente', JSON.stringify(datosCliente));\r\n    } else {\r\n        localStorage.removeItem('datosCliente');\r\n    }\r\n}\r\n\r\n// 1. Función de validación mejorada\r\nfunction validarFormulario() {\r\n    const nombre = document.getElementById('nombre');\r\n    const email = document.getElementById('email');\r\n    const telefono = document.getElementById('telefono');\r\n    const calle = document.getElementById('calle');\r\n    const altura = document.getElementById('altura');\r\n    const localidad = document.getElementById('localidad');\r\n\r\n    // Validaciones específicas\r\n    const valido = \r\n        nombre.value.length >= 5 &&\r\n        /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email.value) &&\r\n        /^\\d{10}$/.test(telefono.value) &&\r\n        calle.value.length >= 3 &&\r\n        altura.value.length >= 1 &&\r\n        localidad.value.length >= 3;\r\n\r\n    if (!valido) {\r\n        mostrarNotificacion('Verifica los campos obligatorios', 'error');\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n// 2. Generar resumen corregido (versión mejorada)\r\nfunction generarResumen() {\r\n    let total = 0;\r\n    const resumenProductos = document.querySelector('.resumen-productos');\r\n    \r\n    resumenProductos.innerHTML = window.carrito.map(item => {\r\n        const subtotal = item.precioNumerico * item.cantidad;\r\n        total += subtotal;\r\n        return `\r\n            <div class=\"resumen-item\">\r\n                <p>${item.linea} - ${item.aroma} x${item.cantidad}</p>\r\n                <p>$${subtotal}</p>\r\n            </div>\r\n        `;\r\n    }).join('');\r\n\r\n    document.getElementById('total-resumen').textContent = `$${total}`;\r\n    \r\n    // Obtener datos actuales del formulario\r\n    const datosCliente = {\r\n        nombre: document.getElementById('nombre').value.trim(),\r\n        email: document.getElementById('email').value.trim(),\r\n        telefono: document.getElementById('telefono').value.trim(),\r\n        direccion: {\r\n            calle: document.getElementById('calle').value.trim(),\r\n            altura: document.getElementById('altura').value.trim(),\r\n            entreCalles: document.getElementById('entre-calles').value.trim(),\r\n            localidad: document.getElementById('localidad').value.trim(),\r\n            codigoPostal: document.getElementById('codigo-postal').value.trim()\r\n        }\r\n    };\r\n\r\n    // Mostrar todos los datos en el resumen\r\n    document.getElementById('resumen-nombre').textContent = datosCliente.nombre || 'No especificado';\r\n    document.getElementById('resumen-email').textContent = datosCliente.email || 'No especificado';\r\n    document.getElementById('resumen-telefono').textContent = datosCliente.telefono || 'No especificado';\r\n    document.getElementById('resumen-calle').textContent = datosCliente.direccion.calle || 'No especificado';\r\n    document.getElementById('resumen-altura').textContent = datosCliente.direccion.altura || 'No especificado';\r\n    document.getElementById('resumen-entre-calles').textContent = datosCliente.direccion.entreCalles || 'No especificado';\r\n    document.getElementById('resumen-localidad').textContent = datosCliente.direccion.localidad || 'No especificado';\r\n    document.getElementById('resumen-codigo-postal').textContent = datosCliente.direccion.codigoPostal || 'No especificado';\r\n    \r\n    // Guardar datos actualizados\r\n    guardarDatosFormulario();\r\n}\r\n\r\n// Configuración del botón de pago (reemplaza el código duplicado)\r\ndocument.querySelector('.boton-pagar')?.addEventListener('click', (e) => {\r\n    e.preventDefault();\r\n    comprar(); // Usamos la función unificada de compra\r\n});\r\n\r\n// 4. Eliminar duplicados en el manejo de pasos (conserva solo esto)\r\ndocument.querySelectorAll('.boton-siguiente, .boton-anterior').forEach(boton => {\r\n    boton.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        cambiarPaso(boton.dataset.paso);\r\n        \r\n        if (boton.dataset.paso === '3' && !validarFormulario()) {\r\n            cambiarPaso('2'); // Regresa si no es válido\r\n            return;\r\n        }\r\n        \r\n        if (boton.dataset.paso === '3') generarResumen();\r\n    });\r\n});\r\n\r\nfunction validarCampo(input) {\r\n    if (!input) return false; // Protección contra inputs nulos\r\n    \r\n    const error = input.nextElementSibling;\r\n    if (!error) return false; // Si no hay elemento de error, salir\r\n    \r\n    // Validaciones específicas por campo\r\n    let valido = true;\r\n    if (input.id === 'nombre') valido = input.value.length >= 5;\r\n    if (input.id === 'email') valido = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(input.value);\r\n    if (input.id === 'telefono') valido = /^\\d{10}$/.test(input.value);\r\n    \r\n    if (input.classList) {\r\n        input.classList.toggle('invalido', !valido);\r\n    }\r\n    if (error.style) {\r\n        error.style.display = valido ? 'none' : 'block';\r\n    }\r\n    \r\n    return valido;\r\n}\r\n\r\n// Función para cambiar entre pasos del carrito\r\nfunction cambiarPaso(pasoDestino) {\r\n    // Ocultar todos los pasos\r\n    document.querySelectorAll('.carrito-paso').forEach(paso => {\r\n        paso.classList.remove('mostrar-paso');\r\n    });\r\n    \r\n    // Mostrar solo el paso destino\r\n    const paso = document.querySelector(`.carrito-paso-${pasoDestino}`);\r\n    if (paso) {\r\n        paso.classList.add('mostrar-paso');\r\n    }\r\n    \r\n    // Actualizar indicador de pasos\r\n    document.querySelectorAll('.paso').forEach(paso => {\r\n        paso.classList.remove('activo');\r\n    });\r\n    \r\n    const pasoIndicador = document.querySelector(`.paso-${pasoDestino}`);\r\n    if (pasoIndicador) {\r\n        pasoIndicador.classList.add('activo');\r\n    }\r\n}\r\n\r\n// Manejar el formulario de datos (versión mejorada)\r\nconst formDatos = document.getElementById('datos-entrega');\r\nif (formDatos) {\r\n    formDatos.addEventListener('submit', (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Validar que haya productos\r\n        if (carrito.length === 0) {\r\n            mostrarNotificacion('Debes agregar al menos un producto para continuar', 'error');\r\n            cambiarPaso('1'); // Regresa al paso 1\r\n            return;\r\n        }\r\n        \r\n        if (validarFormulario()) {\r\n            generarResumen();\r\n            cambiarPaso('3');\r\n        }\r\n    });\r\n}\r\n\r\n// Validación en tiempo real para campos del formulario (versión mejorada)\r\ndocument.querySelectorAll('#datos-entrega input').forEach(input => {\r\n    // Validar cuando pierde el foco\r\n    input.addEventListener('blur', function() {\r\n        validarCampo(this);\r\n        guardarDatosFormulario();\r\n    });\r\n    \r\n    // Manejar cambios en tiempo real\r\n    input.addEventListener('input', function() {\r\n        // Si el campo se vacía, actualizar el almacenamiento\r\n        if (this.value.trim() === '') {\r\n            guardarDatosFormulario();\r\n        }\r\n    });\r\n});\r\n\r\n// Manejar botones de navegación\r\ndocument.querySelector('.carrito-desplegable')?.addEventListener('click', (e) => {\r\n    if (e.target.classList.contains('boton-siguiente')) {\r\n        e.preventDefault();\r\n        const pasoDestino = e.target.dataset.paso;\r\n\r\n        // Validación especial para el paso 2 (desde paso 1)\r\n        if (pasoDestino === '2' && carrito.length === 0) {\r\n            mostrarNotificacion('Debes agregar al menos un producto para continuar', 'error');\r\n            return; // Esto detiene la ejecución aquí\r\n        }\r\n\r\n        // Validación especial para el paso 3 (desde paso 2)\r\n        if (pasoDestino === '3') {\r\n            if (carrito.length === 0) {\r\n                mostrarNotificacion('Debes agregar al menos un producto para continuar', 'error');\r\n                cambiarPaso('1'); // Regresa al paso 1\r\n                return;\r\n            }\r\n            \r\n            if (!validarFormulario()) {\r\n                mostrarNotificacion('Por favor completa todos los campos requeridos', 'error');\r\n                return;\r\n            }\r\n            generarResumen();\r\n        }\r\n        \r\n        cambiarPaso(pasoDestino);\r\n    }\r\n    \r\n    if (e.target.classList.contains('boton-anterior')) {\r\n        e.preventDefault();\r\n        cambiarPaso(e.target.dataset.paso);\r\n    }\r\n});\r\n\r\n\r\n// Manejar cambios en los campos del formulario\r\ndocument.querySelectorAll('#datos-entrega input').forEach(input => {\r\n    input.addEventListener('input', () => {\r\n        // Si el campo está vacío, borramos su valor guardado\r\n        if (input.value === '') {\r\n            const datos = localStorage.getItem('datosCliente') ? \r\n                JSON.parse(localStorage.getItem('datosCliente')) : {};\r\n            \r\n            // Borramos el campo específico\r\n            if (input.id === 'calle' || input.id === 'altura' || \r\n                input.id === 'entre-calles' || input.id === 'localidad' || \r\n                input.id === 'codigo-postal') {\r\n                \r\n                if (datos.direccion) {\r\n                    delete datos.direccion[input.id];\r\n                    localStorage.setItem('datosCliente', JSON.stringify(datos));\r\n                }\r\n            } else {\r\n                delete datos[input.id];\r\n                localStorage.setItem('datosCliente', JSON.stringify(datos));\r\n            }\r\n        }\r\n    });\r\n    \r\n    // Guardar cambios en tiempo real\r\n    input.addEventListener('blur', () => {\r\n        if (input.value !== '') {\r\n            const datos = localStorage.getItem('datosCliente') ? \r\n                JSON.parse(localStorage.getItem('datosCliente')) : {};\r\n            \r\n            // Para campos de dirección\r\n            if (input.id === 'calle' || input.id === 'altura' || \r\n                input.id === 'entre-calles' || input.id === 'localidad' || \r\n                input.id === 'codigo-postal') {\r\n                \r\n                if (!datos.direccion) datos.direccion = {};\r\n                datos.direccion[input.id] = input.value;\r\n            } \r\n            // Para campos principales\r\n            else {\r\n                datos[input.id] = input.value;\r\n            }\r\n            \r\n            localStorage.setItem('datosCliente', JSON.stringify(datos));\r\n        }\r\n    });\r\n});\r\n\r\n// Estilo para los botones\r\n\r\n// Añade esto a tu carrito.js\r\ndocument.querySelectorAll('.carrito-btn').forEach(btn => {\r\n    btn.addEventListener('click', function(e) {\r\n      // Solo si es un botón primario o secundario\r\n      if(this.classList.contains('carrito-btn--primary') || \r\n         this.classList.contains('carrito-btn--secondary')) {\r\n        const rect = this.getBoundingClientRect();\r\n        const x = e.clientX - rect.left;\r\n        const y = e.clientY - rect.top;\r\n        \r\n        const ripple = document.createElement('span');\r\n        ripple.classList.add('carrito-btn-ripple');\r\n        ripple.style.left = `${x}px`;\r\n        ripple.style.top = `${y}px`;\r\n        \r\n        this.appendChild(ripple);\r\n        \r\n        setTimeout(() => {\r\n          ripple.remove();\r\n        }, 600);\r\n      }\r\n    });\r\n  });\r\n\r\n// En carrito.js, dentro del DOMContentLoaded o al final del archivo\r\ndocument.querySelector('.carrito-desplegable')?.addEventListener('wheel', function(e) {\r\n    // Si el scroll está en la parte superior y el usuario intenta hacer scroll hacia arriba\r\n    if (this.scrollTop === 0 && e.deltaY < 0) {\r\n        e.preventDefault();\r\n    }\r\n    // Si el scroll está en la parte inferior y el usuario intenta hacer scroll hacia abajo\r\n    else if (this.scrollHeight - this.scrollTop === this.clientHeight && e.deltaY > 0) {\r\n        e.preventDefault();\r\n    }\r\n}, { passive: false });\r\n\r\n// Prevenir el pull-to-refresh cuando el carrito está abierto CELULARES\r\nlet startY = 0;\r\n\r\ndocument.addEventListener('touchstart', function(e) {\r\n    if (carritoDesplegable.classList.contains('active')) {\r\n        startY = e.touches[0].clientY;\r\n    }\r\n}, { passive: true });\r\n\r\ndocument.addEventListener('touchmove', function(e) {\r\n    if (carritoDesplegable.classList.contains('active')) {\r\n        // Si el scroll está en la parte superior y el usuario está deslizando hacia abajo\r\n        if (carritoDesplegable.scrollTop === 0 && e.touches[0].clientY > startY) {\r\n            e.preventDefault();\r\n        }\r\n        // Si el scroll está en la parte inferior y el usuario está deslizando hacia arriba\r\n        else if (carritoDesplegable.scrollHeight - carritoDesplegable.scrollTop === carritoDesplegable.clientHeight && \r\n                 e.touches[0].clientY < startY) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}, { passive: false });","// Modifica el evento DOMContentLoaded\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    // Inicializar variables globales si no están definidas\r\n    if (!window.productos) {\r\n        console.warn('Productos no está definido');\r\n        window.productos = [];\r\n    }\r\n    \r\n    if (!window.carrito) {\r\n        window.carrito = JSON.parse(localStorage.getItem('carrito')) || [];\r\n    }\r\n\r\n    // Inicializar elementos del carrito si existen\r\n    const carritoIcono = document.querySelector('.carrito-icono');\r\n    if (carritoIcono) {\r\n        carritoIcono.addEventListener('click', toggleCarrito);\r\n    }\r\n\r\n    // Inicializar filtros solo si estamos en la página de productos\r\n    const opcionesFiltro = document.querySelectorAll('input[name=\"opcion\"]');\r\n    if (opcionesFiltro.length > 0) {\r\n        opcionesFiltro.forEach(radio => {\r\n            radio.addEventListener('change', (e) => {\r\n                datosBusqueda.marca = e.target.value;\r\n                filtrarProductos();\r\n            });\r\n        });\r\n    }\r\n\r\n    // Mostrar productos solo si el contenedor existe\r\n    const cajaProductos = document.querySelector('.caja-productos');\r\n    if (cajaProductos) {\r\n        mostrarProductos(window.productos);\r\n    }\r\n\r\n    // Actualizar carrito siempre\r\n    actualizarCarrito();\r\n});\r\n\r\n// Al inicio del archivo\r\nif (typeof productos === 'undefined') {\r\n    console.error('Error: productos no está definido');\r\n    // Puedes cargar productos alternativos o mostrar un mensaje\r\n}\r\n\r\n// Variables\r\n\r\nconst cajaProductos = document.querySelector('.caja-productos') || null;\r\n\r\nconst todo = document.querySelector('#todo');\r\nconst satya = document.querySelector('#satya');\r\nconst sagradaMadre = document.querySelector('#sagrada-madre');\r\nconst aromanza = document.querySelector('#aromanza');\r\n\r\nconst datosBusqueda = { marca: '' };\r\n\r\n// Eventos\r\n\r\n// Mostrar productos\r\nfunction mostrarProductos(productos) {\r\n    limpiarHTML();\r\n\r\n    if (!productos || productos.length === 0) {\r\n        cajaProductos.innerHTML = '<div class=\"sin-productos\"><p>No se encontraron productos</p></div>';\r\n        return;\r\n    }\r\n\r\n    productos.forEach(producto => {\r\n        const productoHTML = document.createElement('div');\r\n        productoHTML.classList.add('producto');\r\n        productoHTML.innerHTML = `\r\n            <img src=\"${producto.imagen}\" alt=\"${producto.linea} - ${producto.marca}\" \r\n                 onerror=\"this.onerror=null; this.src='../build/img/producto-default.jpg'\">\r\n            <div class=\"datos\">\r\n                <div class=\"linea-precio\">\r\n                    <h3>${producto.linea}</h3>\r\n                    <p>${producto.precio}</p>\r\n                </div>\r\n                <button class=\"ver-producto\" data-id=\"${producto.id}\">Ver</button>\r\n            </div>\r\n        `;\r\n        cajaProductos.appendChild(productoHTML);\r\n    });\r\n\r\n    // Eventos para botones \"Ver\"\r\n    document.querySelectorAll('.ver-producto').forEach(boton => {\r\n        boton.addEventListener('click', (e) => {\r\n            const idProducto = e.target.getAttribute('data-id');\r\n            const producto = productos.find(p => p.id === idProducto);\r\n            if (producto) abrirModal(producto);\r\n        });\r\n    });\r\n}\r\n\r\nfunction filtrarProductos() {\r\n    const resultados = datosBusqueda.marca \r\n        ? productos.filter(p => p.marca === datosBusqueda.marca)\r\n        : [...productos];\r\n    \r\n    mostrarProductos(resultados);\r\n}\r\n\r\n// Limpiar HTML\r\nfunction limpiarHTML() {\r\n    if (!cajaProductos) {\r\n        console.error('cajaProductos no está definido');\r\n        return;\r\n    }\r\n    \r\n    while(cajaProductos.firstChild) {\r\n        cajaProductos.removeChild(cajaProductos.firstChild);\r\n    }\r\n}\r\n\r\n// Variables para el modal\r\nconst modal = document.getElementById('producto-modal');\r\nconst modalImagen = document.getElementById('modal-imagen');\r\nconst modalLinea = document.getElementById('modal-linea');\r\nconst modalMarca = document.getElementById('modal-marca');\r\nconst modalPrecio = document.getElementById('modal-precio');\r\nconst modalListaAromas = document.getElementById('modal-lista-aromas');\r\nconst cerrarModalBtn = document.querySelector('.cerrar-modal');\r\n\r\n// Función para abrir el modal\r\nfunction abrirModal(producto) {\r\n    if (!modal) {\r\n        console.error('Modal no encontrado en el DOM');\r\n        return;\r\n    }\r\n\r\n    // Configuración inicial del modal\r\n    modal.classList.add('active');\r\n    document.body.style.overflow = 'hidden';\r\n    \r\n    window.scrollPosition = window.pageYOffset;\r\n    document.body.style.top = `-${window.scrollPosition}px`;\r\n    document.body.classList.add(\"body-scroll-lock\");\r\n    \r\n    window.idProductoActual = producto.id;\r\n    window.aromasSeleccionados = {};\r\n    \r\n    // Configurar imagen\r\n    modalImagen.onerror = () => {\r\n        modalImagen.src = \"build/img/producto-default.jpg\";\r\n    };\r\n    modalImagen.src = producto.imagen;\r\n    \r\n    // Configurar información del producto\r\n    modalLinea.textContent = producto.linea;\r\n    modalMarca.textContent = producto.marca;\r\n    modalPrecio.innerHTML = producto.precio;\r\n    \r\n    // Actualizar lista de aromas\r\n    actualizarModalAromas(producto);\r\n    \r\n    // Configurar el botón del carrito\r\n    setupCarritoButton();\r\n    \r\n    // Mostrar el modal\r\n    modal.style.display = \"flex\";\r\n    \r\n    console.log('Modal abierto correctamente para:', producto.linea);\r\n}\r\n\r\n// Función para cerrar el modal\r\nfunction cerrarModal() {\r\n    if (!modal) return;\r\n    \r\n    modal.classList.remove('active');\r\n    modal.style.display = 'none';\r\n    document.body.classList.remove('body-scroll-lock');\r\n    document.body.style.overflow = '';\r\n    \r\n    if (window.scrollPosition !== undefined) {\r\n        window.scrollTo(0, window.scrollPosition);\r\n    }\r\n    \r\n    document.body.style.top = '';\r\n}\r\n\r\n// Eventos del modal\r\nif (cerrarModalBtn) {\r\n    cerrarModalBtn.addEventListener('click', cerrarModal);\r\n}\r\n\r\nif (modal) {\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal) {\r\n            cerrarModal();\r\n        }\r\n    });\r\n}\r\n\r\n// Eventos del modal\r\nif (cerrarModalBtn) {\r\n    cerrarModalBtn.addEventListener('click', cerrarModal);\r\n}\r\n\r\nif (modal) {\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal) {\r\n            cerrarModal();\r\n        }\r\n    });\r\n}\r\n\r\n// Función para actualizar el modal con aromas interactivos\r\nfunction actualizarModalAromas(producto) {\r\n    const datosProducto = catalogo[producto.marca][producto.linea];\r\n    modalListaAromas.innerHTML = '';\r\n\r\n    datosProducto.aromas.forEach(aroma => {\r\n        const itemAroma = document.createElement('div');\r\n        itemAroma.className = `aroma-item ${aroma.stock === 0 ? 'aroma-sin-stock' : ''}`;\r\n        \r\n        const nombreAroma = document.createElement('span');\r\n        nombreAroma.textContent = aroma.nombre;\r\n        \r\n        const contador = document.createElement('div');\r\n        contador.className = 'contador-cantidad';\r\n        \r\n        const btnMenos = document.createElement('button');\r\n        btnMenos.textContent = '-';\r\n        btnMenos.disabled = true;\r\n        \r\n        const cantidad = document.createElement('span');\r\n        cantidad.textContent = '0';\r\n        cantidad.className = 'cantidad-aroma';\r\n        cantidad.dataset.aroma = aroma.nombre;\r\n        \r\n        const btnMas = document.createElement('button');\r\n        btnMas.textContent = '+';\r\n        btnMas.disabled = aroma.stock === 0;\r\n\r\n        // Función para actualizar estado de los botones\r\n        const actualizarBotones = () => {\r\n            const current = parseInt(cantidad.textContent);\r\n            btnMenos.disabled = current <= 0;\r\n            btnMas.disabled = current >= aroma.stock;\r\n        };\r\n\r\n        if (aroma.stock > 0) {\r\n            // Eventos para los botones +/-\r\n            btnMenos.addEventListener('click', () => {\r\n                const current = parseInt(cantidad.textContent);\r\n                if (current > 0) {\r\n                    cantidad.textContent = current - 1;\r\n                    actualizarAromasSeleccionados(aroma.nombre, current - 1);\r\n                    actualizarBotones(); // Actualiza estado de botones\r\n                }\r\n            });\r\n            \r\n            btnMas.addEventListener('click', () => {\r\n                const current = parseInt(cantidad.textContent);\r\n                if (current < aroma.stock) {\r\n                    cantidad.textContent = current + 1;\r\n                    actualizarAromasSeleccionados(aroma.nombre, current + 1);\r\n                    actualizarBotones(); // Actualiza estado de botones\r\n                }\r\n            });\r\n        } else {\r\n            const sinStock = document.createElement('span');\r\n            sinStock.textContent = ' (Sin stock)';\r\n            sinStock.className = 'texto-sin-stock';\r\n            nombreAroma.appendChild(sinStock);\r\n        }\r\n        \r\n        contador.appendChild(btnMenos);\r\n        contador.appendChild(cantidad);\r\n        contador.appendChild(btnMas);\r\n        \r\n        itemAroma.appendChild(nombreAroma);\r\n        itemAroma.appendChild(contador);\r\n        modalListaAromas.appendChild(itemAroma);\r\n    });\r\n}\r\n\r\nfunction actualizarAromasSeleccionados(nombreAroma, cantidad) {\r\n    if (cantidad > 0) {\r\n        aromasSeleccionados[nombreAroma] = cantidad;\r\n    } else {\r\n        delete aromasSeleccionados[nombreAroma];\r\n    }\r\n    console.log('Aromas seleccionados:', aromasSeleccionados);\r\n}\r\n\r\n// Configuración del botón del carrito\r\nfunction setupCarritoButton() {\r\n    const btn = document.getElementById('btn-agregar-carrito');\r\n    if (!btn) {\r\n        console.warn('Botón \"btn-agregar-carrito\" no encontrado');\r\n        return;\r\n    }\r\n    \r\n    // Clona el botón para eliminar todos los event listeners\r\n    const newBtn = btn.cloneNode(true);\r\n    btn.parentNode.replaceChild(newBtn, btn);\r\n    \r\n    // Agregar nuevo event listener al botón clonado\r\n    newBtn.addEventListener('click', handleAgregarAlCarrito);\r\n    \r\n    console.log('Botón de carrito configurado correctamente');\r\n}\r\n// Manejador del evento para agregar al carrito\r\nfunction handleAgregarAlCarrito() {\r\n    if (!window.aromasSeleccionados || Object.keys(window.aromasSeleccionados).length === 0) {\r\n        mostrarNotificacion('Por favor selecciona al menos un aroma', 'error');\r\n        return;\r\n    }\r\n\r\n    if (!window.agregarAlCarrito) {\r\n        console.error('La función agregarAlCarrito no está definida');\r\n        mostrarNotificacion('Error al agregar al carrito', 'error');\r\n        return;\r\n    }\r\n\r\n    // Verificar que hay al menos un aroma con cantidad > 0\r\n    const tieneItemsValidos = Object.values(window.aromasSeleccionados).some(cant => cant > 0);\r\n    if (!tieneItemsValidos) {\r\n        mostrarNotificacion('Las cantidades deben ser mayores a cero', 'error');\r\n        return;\r\n    }\r\n\r\n    window.agregarAlCarrito();\r\n    \r\n    if (modal) {\r\n        cerrarModal();\r\n    }\r\n    \r\n    mostrarNotificacion('Productos añadidos al carrito');\r\n}","// navScroll.js - Versión universal para todas las páginas\r\n\r\nfunction initNavScroll() {\r\n    const nav = document.querySelector('nav');\r\n    if (!nav) return;\r\n    \r\n    // Agregar clases iniciales\r\n    nav.classList.add('nav-visible');\r\n    \r\n    let lastScroll = 0;\r\n    const scrollThreshold = 100;\r\n    let isEnabled = true;\r\n\r\n    function handleScroll() {\r\n        if (!isEnabled) return;\r\n        \r\n        const currentScroll = window.pageYOffset;\r\n        \r\n        // Resetear al llegar al top\r\n        if (currentScroll <= 10) {\r\n            nav.classList.remove('nav-hidden', 'scrolled');\r\n            nav.classList.add('nav-visible');\r\n            return;\r\n        }\r\n        \r\n        // Cambiar estilo al hacer scroll down\r\n        if (currentScroll > 50) {\r\n            nav.classList.add('scrolled');\r\n        } else {\r\n            nav.classList.remove('scrolled');\r\n        }\r\n        \r\n        // Ocultar/mostrar según dirección del scroll\r\n        if (currentScroll > lastScroll && currentScroll > scrollThreshold) {\r\n            nav.classList.remove('nav-visible');\r\n            nav.classList.add('nav-hidden');\r\n        } else if (currentScroll < lastScroll) {\r\n            nav.classList.remove('nav-hidden');\r\n            nav.classList.add('nav-visible');\r\n        }\r\n        \r\n        lastScroll = currentScroll;\r\n    }\r\n    \r\n    // Inicializar\r\n    handleScroll();\r\n    window.addEventListener('scroll', handleScroll, { passive: true });\r\n    \r\n    // Manejar interacción con carrito (si existe)\r\n    const carritoDesplegable = document.querySelector('.carrito-desplegable');\r\n    if (carritoDesplegable) {\r\n        const observer = new MutationObserver((mutations) => {\r\n            isEnabled = !carritoDesplegable.classList.contains('active');\r\n            if (!isEnabled) {\r\n                nav.classList.remove('nav-hidden');\r\n                nav.classList.add('nav-visible');\r\n            }\r\n        });\r\n        \r\n        observer.observe(carritoDesplegable, {\r\n            attributes: true,\r\n            attributeFilter: ['class']\r\n        });\r\n    }\r\n}\r\n\r\n// Exportar para init.js\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = { initNavScroll };\r\n} else {\r\n    window.initNavScroll = initNavScroll;\r\n}","// init.js - Inicialización común para todas las páginas\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    // Inicializar variables globales si no están definidas\r\n    if (!window.productos) {\r\n        window.productos = [];\r\n    }\r\n    \r\n    if (!window.carrito) {\r\n        window.carrito = JSON.parse(localStorage.getItem('carrito')) || [];\r\n    }\r\n    \r\n    if (!window.aromasSeleccionados) {\r\n        window.aromasSeleccionados = {};\r\n    }\r\n    \r\n    // Inicializar carrito\r\n    if (typeof actualizarCarrito === 'function') {\r\n        actualizarCarrito();\r\n    }\r\n    \r\n    // Inicializar nav scroll en todas las páginas\r\n    if (typeof initNavScroll === 'function') {\r\n        initNavScroll();\r\n    }\r\n});"]}